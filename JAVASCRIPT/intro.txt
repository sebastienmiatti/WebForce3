string
var str= "ma chaine de caractères" + "deuxième partie";

number
float (nombre a virgule)
int (nombre entier)

boolean
(true ou false) (test sur valeur ou retour de fonction)

array
object

var my arr = ["pomme,"banane","figue"];

var myObject= 
{
"nom": "miatti",
"prenom":"sebastien",
"age": 27,
};
 
alert(myArr[1]); // > renvoi "banane"
myArr.length // > nombre d'éléments dans le tableau

myObject.prenom // > renvoie la valeur de la propriété prénom de l'object my Object
myObject["prenom"] // idem

opérateurs
 + - * / %

2+5 //> renvoie 7
2-5 //> renvoie -3
2*5 //> renvoie 10
2/5 //> renvoie 0.4
2%5 //> renvoie 2

 fonctions
function myFunction (myArg1,myArg2)
{
// instructions qui vont être exécutées à l'appel de la fonction
}
// Appel
myFunction (2, 56);
 
function returning (){
		return "bonjour";
}
// on stocke la valeur de retour de la fonction returning dans la variable myVar
var myVar= returning();

fonction calculate (value1, value2){
	return value1 + value 2 ;
}

result1 = calculate(1, 7);
result2 = calculate(13, 7);

alert(result1);

var myVar2;
myVar2 = 2;


les conditions

if ( conditions) {
 //instructions
}


if(conditions){
 //instructions
} else{ 
 // instructions si les conditions ne sont pas respectées
}


if (conditions){
 //instructions
}else if (conditions2){
 //instructions si les conditions ne sont pas respectée et que les conditions2 sont respectées.

operateurs de comparaison
	< > <= >=   ///supérieur, inferieur, supérieur ou egal inférieur ou égal à
0 < 21 // renvoie true
0 < 0 // renvoie false
0 > -7 // renvoie true
0 > 21 // renvoie false
0 > 0 // renvoie false
0 <= 0 // renvoie true
0 >= 0 // renvoie true


== égalité

1 == 1  //renvoie
1 == 0  // renvoie false
1 == "1" // renvoie true


=== égalité stricte

1 === 1  // renvoie true
1 === "1" // renvoie false
1.0 === 1 // renvoie false


!= (inégalité)

1 != 1 // renvoie false
1 != 0 // renvoie true
1 != "1" // renvoie false
 
!== (inégalité stricte)

1 !== 1 // renvoie false
1 !== "1" // renvoie true
1 !== 1.0 // renvoie true

typeof 1 // renvoie "number"
typeof "bonjour" // renvoie "string"
typeof myVar // renvoie "undefined" (la variable myVar est vide ou non définie)

opérateurs logiques

&& 
if (condition1 && condition2) {
// instructions exécutées si les deux conditions renvoie true
}

||
if (condition1 || condition2) {
// insttructions exécutées si au moins une des deux conditions renvoie true
}

if((condition1 || condition2) && (condition3 || condition4)){
  // si conditions 1 et/ou conditions 2 renvoient true ET condition 3 et /ou conditions 4 renvoient true
}


!
if (condition) {
// s'exécute si conditions est false
}
if (condition == false){}
if(condition != true){}

if(!(condition1 || condition2)){
 // si aucune des conditions n'est true
}

var i = 0;
i = i + 1;// i = 1
i +=1; // i = 2
i ++; // i = 3
i += 2; // i = 5
i = i - 1 ; // 4
i -= 1; // 3
i--; // 2
i *= 2; // 4
i /= 2; // 2
i %= 2; // 0

 la boucle la plus simple c'est la boucle while (tant que)

var j = 0;
while (j < 10){ //tant que j est inférieur a 10
	j++; //j'incrémente j de 1
}

for (i = 0; i < 10; i++){
}

var myArr = ["chat", "chien", "loutre", "poney"]
for (item in myArr){ // pour chaque 
alert(item);
}

var myObject = {"nom" : "Miatti" , prenom : "Sébastien"}
 for (property in myObject) { // pour chaque propriété de l'objet
alert(property); // affiche le nom de la propriété
alert(myObject[property]); // affiche la valeur de la propriété
}

for (i = 0; i < myArr.length; i++) { // pour chaques entré dans le tableau myArr
	alert (myArr[i]);
}

switch    // vérifie tout le temps une égalité; connaitre les valeurs de variables

var word ="pomme";
switch (word) { // on teste la valeur de word
	case "banane":     // if (word == "banane")
	break;  
	case "pomme":    // else if (word == "pomme")
	break;
	default:      // cas par defaut (else)
	break;
}


// portée (scope) des variables / fonctions

// scope : window

war myVar; // variable globale : accessible dans toute la page

function myFunc () { // fonction globale
	var var2; // variable locale : accessible uniquement dans la fonction 
	var3; // variable globale
}

///////////////////////////////////


var myString = "test"; // équivalent de window.myString = "test"

function myFunc (myString) {
	alert(myString);
}

myFunc ("pomme"); // alert "pomme"

function func2 () {
	var myString = "retest";
	alert(window.myString); // correspond à la variable globale ("test")
	alert(myString); // correspond a la variable locale ("retest") 
}









for array.length

switch

onclik
onchange



















